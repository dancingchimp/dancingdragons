{"version":3,"file":"static/js/953.0868a07c.chunk.js","mappings":"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","sources":["utils/crypto.js","components/events/EventDetails.js"],"sourcesContent":["// File: src/utils/crypto.js\n\n/**\n * Generates a temporary token for anonymous event participation\n * @returns {string} A unique token\n */\nexport function generateTemporaryToken() {\n    // Generate random bytes\n    const array = new Uint8Array(24);\n    crypto.getRandomValues(array);\n    \n    // Convert to base64 and clean up for URL safety\n    return btoa(String.fromCharCode.apply(null, array))\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=/g, '');\n  }\n  \n  /**\n   * Validates a temporary token\n   * @param {string} token - The token to validate\n   * @param {string} eventId - The event ID\n   * @returns {boolean} Whether the token is valid\n   */\n  export function validateTemporaryToken(token, eventId) {\n    const stored = localStorage.getItem(`event_${eventId}`);\n    if (!stored) return false;\n    \n    try {\n      const { token: storedToken, expiration } = JSON.parse(stored);\n      const expired = new Date(expiration) < new Date();\n      \n      if (expired) {\n        localStorage.removeItem(`event_${eventId}`);\n        return false;\n      }\n      \n      return token === storedToken;\n    } catch (e) {\n      return false;\n    }\n  }\n  \n  /**\n   * Cleans up expired tokens\n   */\n  export function cleanupExpiredTokens() {\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key.startsWith('event_')) {\n        try {\n          const { expiration } = JSON.parse(localStorage.getItem(key));\n          if (new Date(expiration) < new Date()) {\n            localStorage.removeItem(key);\n          }\n        } catch (e) {\n          // Invalid data, remove it\n          localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n  \n  // Run cleanup periodically\n  setInterval(cleanupExpiredTokens, 1000 * 60 * 60); // Every hour","// src/components/events/EventDetails.js\nimport React, { useState } from 'react';\nimport { Modal } from '../system/Modal';\nimport { Card, CardContent } from '../ui/Card';\nimport { LocationDetailsCard } from './LocationSystem';\nimport { validateTemporaryToken } from '../../utils/crypto';\n\nfunction ParticipantCount({ current, max, waitlist = 0 }) {\n  const percentFull = (current / max) * 100;\n  \n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between text-sm\">\n        <span className=\"text-gray-400\">Participants</span>\n        <span className=\"text-white\">{current} / {max}</span>\n      </div>\n      <div className=\"h-2 bg-gray-700 rounded-full overflow-hidden\">\n        <div \n          className={`h-full rounded-full transition-all duration-500 ${\n            percentFull >= 90 ? 'bg-orange-500' :\n            percentFull >= 70 ? 'bg-orange-400' : 'bg-orange-300'\n          }`}\n          style={{ width: `${percentFull}%` }}\n        />\n      </div>\n      {waitlist > 0 && (\n        <div className=\"text-sm text-orange-400\">\n          {waitlist} on waitlist\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction EventTiming({ event }) {\n  const eventDate = new Date(event.date);\n  const today = new Date();\n  const daysUntil = Math.ceil((eventDate - today) / (1000 * 60 * 60 * 24));\n  \n  return (\n    <div className=\"space-y-4\">\n      <Card>\n        <CardContent>\n          <div className=\"flex items-center gap-4\">\n            <div className=\"bg-gray-800 p-3 rounded text-orange-500\">\n              <i className=\"fas fa-clock text-xl\"></i>\n            </div>\n            <div>\n              <div className=\"text-white\">\n                {eventDate.toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  month: 'long',\n                  day: 'numeric'\n                })}\n              </div>\n              <div className=\"text-gray-400\">\n                {event.time} ({event.duration} minutes)\n              </div>\n            </div>\n          </div>\n          {daysUntil > 0 && (\n            <div className=\"mt-3 text-sm text-orange-300\">\n              {daysUntil} days until event\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction RequirementsList({ requirements }) {\n  const reqList = requirements.split('\\n').filter(Boolean);\n  \n  return (\n    <div className=\"space-y-2\">\n      {reqList.map((req, index) => (\n        <div key={index} className=\"flex items-start gap-3 text-gray-300\">\n          <i className=\"fas fa-check-circle text-orange-500 mt-1\"></i>\n          <span>{req}</span>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction EventDetailsModal({ isOpen, onClose, event }) {\n  const [isParticipant, setIsParticipant] = useState(() => {\n    return validateTemporaryToken(localStorage.getItem(`event_${event.id}_token`), event.id);\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={event.title}\n      size=\"lg\"\n    >\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        {/* Left Column */}\n        <div className=\"space-y-6\">\n          <EventTiming event={event} />\n          \n          <ParticipantCount \n            current={event.capacity - event.spotsLeft}\n            max={event.capacity}\n            waitlist={event.waitlist?.length || 0}\n          />\n\n          <Card>\n            <CardContent className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-orange-300\">\n                Event Details\n              </h3>\n              <p className=\"text-gray-300\">\n                {event.description}\n              </p>\n              \n              {event.requirements && (\n                <div className=\"mt-6\">\n                  <h4 className=\"font-medium text-white mb-3\">Requirements</h4>\n                  <RequirementsList requirements={event.requirements} />\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Right Column */}\n        <div className=\"space-y-6\">\n          <LocationDetailsCard \n            event={event}\n            isParticipant={isParticipant}\n          />\n\n          {/* Action Buttons */}\n          <div className=\"flex gap-4\">\n            {isParticipant ? (\n              <>\n                <button className=\"flex-1 bg-orange-500 hover:bg-orange-600 text-white \n                                 px-6 py-3 rounded-xl transition-colors\">\n                  View Signal Group\n                </button>\n                <button className=\"px-6 py-3 border border-orange-500 text-orange-500 \n                                 rounded-xl hover:bg-orange-500/10 transition-colors\">\n                  Cancel RSVP\n                </button>\n              </>\n            ) : (\n              <button className=\"flex-1 bg-orange-500 hover:bg-orange-600 text-white \n                               px-6 py-3 rounded-xl transition-colors\">\n                {event.spotsLeft > 0 ? 'RSVP Now' : 'Join Waitlist'}\n              </button>\n            )}\n          </div>\n\n          {/* Privacy Notice */}\n          <div className=\"text-sm text-gray-400\">\n            <p className=\"flex items-center gap-2\">\n              <i className=\"fas fa-shield-alt\"></i>\n              Privacy protected:\n            </p>\n            <ul className=\"mt-2 space-y-1 pl-6 list-disc\">\n              <li>Location details shared via Signal</li>\n              <li>Anonymous participation</li>\n              <li>No personal data stored</li>\n              <li>Auto-delete after event</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default EventDetailsModal;"],"names":["setInterval","i","localStorage","length","key","startsWith","expiration","JSON","parse","getItem","Date","removeItem","e","ParticipantCount","_ref","current","max","waitlist","percentFull","_jsxs","className","children","_jsx","style","width","EventTiming","_ref2","event","eventDate","date","today","daysUntil","Math","ceil","Card","CardContent","toLocaleDateString","weekday","month","day","time","duration","RequirementsList","_ref3","requirements","reqList","split","filter","Boolean","map","req","index","_ref4","_event$waitlist","isOpen","onClose","isParticipant","setIsParticipant","useState","token","eventId","stored","storedToken","validateTemporaryToken","id","Modal","title","size","capacity","spotsLeft","description","LocationDetailsCard","_Fragment"],"sourceRoot":""}