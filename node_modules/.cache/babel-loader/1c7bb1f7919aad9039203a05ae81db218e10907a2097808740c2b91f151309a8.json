{"ast":null,"code":"// src/utils/video/encryption.js\nimport{VIDEO_CONFIG}from'./videoConfig';export const validateAccessKey=key=>{if(!key)return false;return VIDEO_CONFIG.validKeys.includes(key);};export const encryptStorageKey=key=>{// Simple encryption for demo - replace with more secure method\nreturn btoa(key+'_'+Date.now());};export const decryptStorageKey=encryptedKey=>{// Simple decryption for demo - replace with more secure method\ntry{const decoded=atob(encryptedKey);return decoded.split('_')[0];}catch{return null;}};// Helper function to generate new access keys\nexport const generateAccessKey=()=>{const randomString=Math.random().toString(36).substring(2,15);return`dd_${randomString}`;};// Helper to validate key format\nexport const isValidKeyFormat=key=>{return key&&key.startsWith(VIDEO_CONFIG.accessKeyPrefix)&&key.length>=10;};","map":{"version":3,"names":["VIDEO_CONFIG","validateAccessKey","key","validKeys","includes","encryptStorageKey","btoa","Date","now","decryptStorageKey","encryptedKey","decoded","atob","split","generateAccessKey","randomString","Math","random","toString","substring","isValidKeyFormat","startsWith","accessKeyPrefix","length"],"sources":["/home/elysia/dancingdragons/src/utils/video/encryption.js"],"sourcesContent":["// src/utils/video/encryption.js\n\nimport { VIDEO_CONFIG } from './videoConfig';\n\nexport const validateAccessKey = (key) => {\n  if (!key) return false;\n  return VIDEO_CONFIG.validKeys.includes(key);\n};\n\nexport const encryptStorageKey = (key) => {\n  // Simple encryption for demo - replace with more secure method\n  return btoa(key + '_' + Date.now());\n};\n\nexport const decryptStorageKey = (encryptedKey) => {\n  // Simple decryption for demo - replace with more secure method\n  try {\n    const decoded = atob(encryptedKey);\n    return decoded.split('_')[0];\n  } catch {\n    return null;\n  }\n};\n\n// Helper function to generate new access keys\nexport const generateAccessKey = () => {\n  const randomString = Math.random().toString(36).substring(2, 15);\n  return `dd_${randomString}`;\n};\n\n// Helper to validate key format\nexport const isValidKeyFormat = (key) => {\n  return key && key.startsWith(VIDEO_CONFIG.accessKeyPrefix) && key.length >= 10;\n};"],"mappings":"AAAA;AAEA,OAASA,YAAY,KAAQ,eAAe,CAE5C,MAAO,MAAM,CAAAC,iBAAiB,CAAIC,GAAG,EAAK,CACxC,GAAI,CAACA,GAAG,CAAE,MAAO,MAAK,CACtB,MAAO,CAAAF,YAAY,CAACG,SAAS,CAACC,QAAQ,CAACF,GAAG,CAAC,CAC7C,CAAC,CAED,MAAO,MAAM,CAAAG,iBAAiB,CAAIH,GAAG,EAAK,CACxC;AACA,MAAO,CAAAI,IAAI,CAACJ,GAAG,CAAG,GAAG,CAAGK,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CACrC,CAAC,CAED,MAAO,MAAM,CAAAC,iBAAiB,CAAIC,YAAY,EAAK,CACjD;AACA,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACF,YAAY,CAAC,CAClC,MAAO,CAAAC,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAE,KAAM,CACN,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CACrC,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAChE,MAAO,MAAMJ,YAAY,EAAE,CAC7B,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,gBAAgB,CAAIlB,GAAG,EAAK,CACvC,MAAO,CAAAA,GAAG,EAAIA,GAAG,CAACmB,UAAU,CAACrB,YAAY,CAACsB,eAAe,CAAC,EAAIpB,GAAG,CAACqB,MAAM,EAAI,EAAE,CAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}