{"ast":null,"code":"// File: src/context/EventContext.js\nimport React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const EventContext=/*#__PURE__*/createContext();export function EventProvider(_ref){let{children}=_ref;const[events,setEvents]=useState([]);const value={events,setEvents};return/*#__PURE__*/_jsx(EventContext.Provider,{value:value,children:children});}export function useEvents(){const context=useContext(EventContext);if(!context){throw new Error('useEvents must be used within an EventProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","EventContext","EventProvider","_ref","children","events","setEvents","value","Provider","useEvents","context","Error"],"sources":["/home/elysia/dancingdragons/src/context/EventContext.js"],"sourcesContent":["// File: src/context/EventContext.js\n\nimport React, { createContext, useContext, useState } from 'react';\n\nconst EventContext = createContext();\n\nexport function EventProvider({ children }) {\n  const [events, setEvents] = useState([]);\n\n  const value = {\n    events,\n    setEvents\n  };\n\n  return (\n    <EventContext.Provider value={value}>\n      {children}\n    </EventContext.Provider>\n  );\n}\n\nexport function useEvents() {\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('useEvents must be used within an EventProvider');\n  }\n  return context;\n}"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,MAAO,SAAS,CAAAM,aAAaA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAS,KAAK,CAAG,CACZF,MAAM,CACNC,SACF,CAAC,CAED,mBACEN,IAAA,CAACC,YAAY,CAACO,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAH,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAEA,MAAO,SAAS,CAAAK,SAASA,CAAA,CAAG,CAC1B,KAAM,CAAAC,OAAO,CAAGb,UAAU,CAACI,YAAY,CAAC,CACxC,GAAI,CAACS,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAAD,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}