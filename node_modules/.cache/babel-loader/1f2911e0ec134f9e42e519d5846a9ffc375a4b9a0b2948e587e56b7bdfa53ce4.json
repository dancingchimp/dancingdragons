{"ast":null,"code":"var _jsxFileName = \"/home/elysia/dancingdragons/src/context/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('AppContext initializing...'); // Debug log\n\n// Create context\nconst AppContext = /*#__PURE__*/createContext();\n\n// Initial state\nconst initialState = {\n  isMenuOpen: false,\n  theme: 'dark',\n  loading: false\n};\n\n// Provider component\nexport function AppProvider({\n  children\n}) {\n  _s();\n  console.log('AppProvider rendering...'); // Debug log\n\n  const [state, setState] = useState(initialState);\n\n  // Actions\n  const toggleMenu = () => {\n    setState(prev => ({\n      ...prev,\n      isMenuOpen: !prev.isMenuOpen\n    }));\n  };\n  const closeMenu = () => {\n    setState(prev => ({\n      ...prev,\n      isMenuOpen: false\n    }));\n  };\n  const setIsMenuOpen = isOpen => {\n    setState(prev => ({\n      ...prev,\n      isMenuOpen: isOpen\n    }));\n  };\n\n  // Context value\n  const contextValue = {\n    ...state,\n    toggleMenu,\n    closeMenu,\n    setIsMenuOpen,\n    setState\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to use the context\n_s(AppProvider, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n_c = AppProvider;\nexport function useAppContext() {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    console.error('useAppContext must be used within an AppProvider'); // Debug log\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n}\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","console","log","AppContext","initialState","isMenuOpen","theme","loading","AppProvider","children","_s","state","setState","toggleMenu","prev","closeMenu","setIsMenuOpen","isOpen","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","error","Error","$RefreshReg$"],"sources":["/home/elysia/dancingdragons/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconsole.log('AppContext initializing...'); // Debug log\n\n// Create context\nconst AppContext = createContext();\n\n// Initial state\nconst initialState = {\n  isMenuOpen: false,\n  theme: 'dark',\n  loading: false\n};\n\n// Provider component\nexport function AppProvider({ children }) {\n  console.log('AppProvider rendering...'); // Debug log\n  \n  const [state, setState] = useState(initialState);\n\n  // Actions\n  const toggleMenu = () => {\n    setState(prev => ({\n      ...prev,\n      isMenuOpen: !prev.isMenuOpen\n    }));\n  };\n\n  const closeMenu = () => {\n    setState(prev => ({\n      ...prev,\n      isMenuOpen: false\n    }));\n  };\n\n  const setIsMenuOpen = (isOpen) => {\n    setState(prev => ({\n      ...prev,\n      isMenuOpen: isOpen\n    }));\n  };\n\n  // Context value\n  const contextValue = {\n    ...state,\n    toggleMenu,\n    closeMenu,\n    setIsMenuOpen,\n    setState\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\n// Custom hook to use the context\nexport function useAppContext() {\n  const context = useContext(AppContext);\n  if (!context) {\n    console.error('useAppContext must be used within an AppProvider'); // Debug log\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnEC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAAC,CAAC;;AAE3C;AACA,MAAMC,UAAU,gBAAGP,aAAa,CAAC,CAAC;;AAElC;AACA,MAAMQ,YAAY,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,OAAO,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxCT,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;;EAEzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACM,YAAY,CAAC;;EAEhD;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBD,QAAQ,CAACE,IAAI,KAAK;MAChB,GAAGA,IAAI;MACPT,UAAU,EAAE,CAACS,IAAI,CAACT;IACpB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACtBH,QAAQ,CAACE,IAAI,KAAK;MAChB,GAAGA,IAAI;MACPT,UAAU,EAAE;IACd,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMW,aAAa,GAAIC,MAAM,IAAK;IAChCL,QAAQ,CAACE,IAAI,KAAK;MAChB,GAAGA,IAAI;MACPT,UAAU,EAAEY;IACd,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG;IACnB,GAAGP,KAAK;IACRE,UAAU;IACVE,SAAS;IACTC,aAAa;IACbJ;EACF,CAAC;EAED,oBACEZ,OAAA,CAACG,UAAU,CAACgB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAT,QAAA,EACtCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B;;AAEA;AAAAd,EAAA,CA3CgBF,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AA4C3B,OAAO,SAASkB,aAAaA,CAAA,EAAG;EAAAC,GAAA;EAC9B,MAAMC,OAAO,GAAG/B,UAAU,CAACM,UAAU,CAAC;EACtC,IAAI,CAACyB,OAAO,EAAE;IACZ3B,OAAO,CAAC4B,KAAK,CAAC,kDAAkD,CAAC,CAAC,CAAC;IACnE,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOF,OAAO;AAChB;AAACD,GAAA,CAPeD,aAAa;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}