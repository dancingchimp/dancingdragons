{"ast":null,"code":"// src/context/AppContext.js\nimport React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AppContext=/*#__PURE__*/createContext();export function AppProvider(_ref){let{children}=_ref;const[isLoading,setIsLoading]=useState(false);const value={isLoading,setIsLoading};return/*#__PURE__*/_jsx(AppContext.Provider,{value:value,children:children});}export function useAppContext(){const context=useContext(AppContext);if(!context){throw new Error('useAppContext must be used within an AppProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","AppContext","AppProvider","_ref","children","isLoading","setIsLoading","value","Provider","useAppContext","context","Error"],"sources":["/home/elysia/dancingdragons/src/context/AppContext.js"],"sourcesContent":["// src/context/AppContext.js\n\nimport React, { createContext, useContext, useState } from 'react';\n\nconst AppContext = createContext();\n\nexport function AppProvider({ children }) {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const value = {\n    isLoading,\n    setIsLoading,\n  };\n\n  return (\n    <AppContext.Provider value={value}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport function useAppContext() {\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n}"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,UAAU,cAAGL,aAAa,CAAC,CAAC,CAElC,MAAO,SAAS,CAAAM,WAAWA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAAS,KAAK,CAAG,CACZF,SAAS,CACTC,YACF,CAAC,CAED,mBACEN,IAAA,CAACC,UAAU,CAACO,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAH,QAAA,CAC/BA,QAAQ,CACU,CAAC,CAE1B,CAEA,MAAO,SAAS,CAAAK,aAAaA,CAAA,CAAG,CAC9B,KAAM,CAAAC,OAAO,CAAGb,UAAU,CAACI,UAAU,CAAC,CACtC,GAAI,CAACS,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,kDAAkD,CAAC,CACrE,CACA,MAAO,CAAAD,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}